{"version":3,"sources":["features/userSlice.js","HeaderOption.js","firebase.js","Header.js","Sidebar.js","InputOption.js","Post.js","Feed.js","Login.js","Widgets.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["userSlice","createSlice","name","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","HeaderOption","avatar","Icon","title","onclick","useSelector","onClick","className","Avatar","src","photoUrl","email","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","Header","dispatach","useDispatch","alt","placeholder","type","HomeIcon","SupervisorAccountIcon","BusinessCenterIcon","ChatIcon","NotificationsIcon","signOut","Sidebar","recentItem","topic","displayName","InputOption","color","style","Post","forwardRef","ref","description","message","photourl","ThumbUpAltOutlinedIcon","ChatOutlinedIcon","ShareOutlinedIcon","SendOutlinedIcon","Feed","useState","input","setInput","posts","setPosts","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","value","onChange","e","target","preventDefault","add","timestamp","FieldValue","serverTimestamp","ImageIcon","SubscriptionsIcon","EventNoteIcon","CalendarViewDayIcon","Login","setEmail","password","setPassword","setName","profilePic","setProfilePic","dispatch","signInWithEmailAndPassword","then","userAuth","uid","profileurl","photoURL","catch","error","alert","createUserWithEmailAndPassword","updateProfile","photoURl","Widgets","newsArticle","heading","subtitle","App","onAuthStateChanged","store","configureStore","reducer","userReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2dcdc6b9.chunk.js","sourcesContent":["import {  createSlice } from '@reduxjs/toolkit';\n\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState:{\nuser:null,\n  },\n  \n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    login: (state,action) => {\n     \n      state.user = action.payload;\n    },\n    // logout: (state) => {\n    //   state.value -= 1;\n    // },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    logout: (state) => {\n      state.user = null ;\n    },\n  },\n   });\n\nexport const { login,logout } = userSlice.actions;\n//selectors\nexport const selectUser = (state) => state.user.user;\nexport default userSlice.reducer;\n\n","import { Avatar } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectUser } from \"./features/userSlice\";\n// import { Header } from \"./Header\";\nimport \"./HeaderOption.css\";\nfunction HeaderOption({ avatar, Icon, title, onclick }) {\n  const user = useSelector(selectUser);\n  return (\n    <div onClick={onclick} className=\"headerOption\">\n      {Icon && (\n        <Icon\n          className=\"\n           headerOpion_icon\"\n        />\n      )}\n      {avatar && (\n        <Avatar className=\"headerOption_icon\" src={user?.photoUrl}>\n          {user?.email[0]}\n        </Avatar>\n      )}\n      <h3 className=\"headerOption_title\">{title}</h3>\n    </div>\n    //   avatar={user.photoUrl}\n  );\n}\nexport default HeaderOption;\n","// import * as firebase from 'firebase'\nimport  firebase from 'firebase'\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAAgQh-uVguIX36XFCrpAQRr7rghqdHuR8\",\n    authDomain: \"linkedin-clone-e1fd9.firebaseapp.com\",\n    projectId: \"linkedin-clone-e1fd9\",\n    storageBucket: \"linkedin-clone-e1fd9.appspot.com\",\n    messagingSenderId: \"427421577943\",\n    appId: \"1:427421577943:web:6cbf4192f8cb8b8ef97692\"\n  };\n  // Initialize Firebase\n  const firebaseApp = firebase.initializeApp(firebaseConfig)\n//   firebase.initializeApp(firebaseConfig);\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\n\n  \n  export {db,auth};","import React from \"react\";\nimport \"./Header.css\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport HeaderOption from \"./HeaderOption\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport BusinessCenterIcon from \"@material-ui/icons/BusinessCenter\";\nimport ChatIcon from \"@material-ui/icons/Chat\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport SupervisorAccountIcon from \"@material-ui/icons/SupervisorAccount\";\nimport { logout, selectUser } from \"./features/userSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { auth } from \"./firebase\";\nexport const Header = () => {\n  \n  const dispatach = useDispatch();\n  const logoutApp = () => {\n    dispatach(logout());\n    auth.signOut();\n  };\n  return (\n    <div className=\"header\">\n      {/* <h1>this is header</h1>  */}\n\n      <div className=\"header_left\">\n        <img\n          src=\"https://www.raulvelazquezphd.com/wp-content/uploads/2017/10/LinkedIn-1.png\"\n          alt=\"\"\n        ></img>\n\n        <div className=\"header_search\">\n          <SearchIcon />\n\n          {/* searchicon*/}\n          <input placeholder=\"Search\" type=\"text\" />\n        </div>\n      </div>\n      <div className=\"header_right\">\n        <HeaderOption Icon={HomeIcon} title=\"Home\" />\n        <HeaderOption Icon={SupervisorAccountIcon} title=\"My Network\" />\n        <HeaderOption Icon={BusinessCenterIcon} title=\"Jobs\" />\n        <HeaderOption Icon={ChatIcon} title=\"Messaging\" />\n        <HeaderOption Icon={NotificationsIcon} title=\"Notifications\" />\n        <HeaderOption\n        avatar={true}\n          title=\"Me\"\n          onclick={logoutApp}\n        />\n      </div>\n    </div>\n  );\n};\n","import { Avatar } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectUser } from \"./features/userSlice\";\nimport \"./Sidebar.css\";\nfunction Sidebar() {\n  const user = useSelector(selectUser);\n  const recentItem = (topic) => (\n    <div className=\"sidebar_recentItem\">\n      <span className=\"sidebar_hash\">#</span>\n      <p>{topic}</p>\n    </div>\n  );\n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidebar_top\">\n        <img\n          src=\"https://images.unsplash.com/photo-1579546929518-9e396f3cc809?xlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxleHBsb3JILZWR8MXx8fGVufDB8fHw%3D&w=1000&q=80\"\n          alt=\"\"\n        ></img>\n        <Avatar src={user.photoUrl} className=\"sidebar_avatar\" />\n        {user.email[0]}\n        <h2>{user.displayName}</h2>\n        <h2>{user.email}</h2>\n      </div>\n      <div className=\"sidebar_stats\">\n        <div className=\"sidebar_stat\">\n          <p>who viewed you</p>\n          <p className=\"sidebar_statNumber\">2,543</p>\n        </div>\n        <div className=\"sidebar_stat\">\n          <p>views on post</p>\n          <p className=\"sidebar_statNumber\">2,448</p>\n        </div>\n      </div>\n      <div className=\"sidebar_bottom\">\n        <p>Recent</p>\n        {recentItem(\"reactjs\")}\n        {recentItem(\"programming\")}\n        {recentItem(\"softwareengineering\")}\n        {recentItem(\"design\")}\n        {recentItem(\"developer\")}\n      </div>\n    </div>\n  );\n}\nexport default Sidebar;\n","// import { Icon } from \"@material-ui/core\"\nimport \"./InputOption.css\"\nfunction InputOption({Icon,title,color}){\n    return(\n<div className=\"inputOption\">\n    < Icon style={{color:color}}></Icon>\n<h4>{title}</h4>\n</div>\n    )\n}\nexport default InputOption","import { Avatar } from \"@material-ui/core\";\nimport React,{forwardRef} from \"react\";\nimport \"./Post.css\";\nimport InputOption from \"./InputOption\";\nimport ThumbUpAltOutlinedIcon from \"@material-ui/icons/ThumbUpAltOutlined\";\nimport ChatOutlinedIcon from \"@material-ui/icons/ChatOutlined\";\nimport ShareOutlinedIcon from \"@material-ui/icons/ShareOutlined\";\nimport SendOutlinedIcon from \"@material-ui/icons/SendOutlined\";\n// import CalendarViewDayIcon from \"@material-ui/icons/\";\nconst Post = forwardRef(({ name, description, message, photourl },ref) => {\n  return (\n    <div  ref={ref}className=\"post\">\n      <div className=\"post_header\">\n        <Avatar src={photourl} >\n{name[0]}\n</Avatar>        <div className=\"post_info\">\n          <h2>{name}</h2>\n          <p>{description}</p>\n        </div>\n      </div>\n      <div className=\"post_body\">\n        <p>{message}</p>\n      </div>\n      <div className=\"post_buttons\">\n        <InputOption Icon={ThumbUpAltOutlinedIcon} title=\"Like\" color=\"gray\" />\n        <InputOption Icon={ChatOutlinedIcon} title=\"Comment\" color=\"gray\" />\n        <InputOption Icon={ShareOutlinedIcon} title=\"Share\" color=\"gray\" />\n        <InputOption Icon={SendOutlinedIcon} title=\"Send\" color=\"gray\" />\n      </div>\n    </div>\n  );\n})\n\nexport default Post;\n","import React, { useState, useEffect } from \"react\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport ImageIcon from \"@material-ui/icons/Image\";\nimport SubscriptionsIcon from \"@material-ui/icons/Subscriptions\";\nimport EventNoteIcon from \"@material-ui/icons/EventNote\";\nimport CalendarViewDayIcon from \"@material-ui/icons/CalendarViewDay\";\nimport \"./Feed.css\";\nimport Post from \"./Post\";\nimport { db } from \"./firebase\";\nimport InputOption from \"./InputOption\";\nimport firebase from \"firebase\";\nimport { useSelector } from \"react-redux\";\nimport { selectUser } from \"./features/userSlice\";\nimport FlipMove from \"react-flip-move\"\nexport default function Feed() {\n  const user= useSelector(selectUser);\n  const [input, setInput] = useState('');\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    db.collection(\"posts\")\n    .orderBy(\"timestamp\",\"desc\")\n    .onSnapshot((snapshot) =>\n      setPosts(\n        snapshot.docs.map((doc) => ({\n          id: doc.id,\n          data: doc.data(),\n        }))\n      )\n    );\n  }, []);\n  const sendPost = (e) => {\n    e.preventDefault();\n\n    db.collection(\"posts\").add({\n      name: user.displayName,\n      description: user.email,\n      message: input,\n      photoUrl:user.photoUrl || \"\",\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n    })\n    setInput(\"\");\n  };\n  return (\n    <div className=\"feed \">\n      <div className=\"feed_inputContainer\">\n        <div className=\"feed_input\">\n          <CreateIcon />\n          <form>\n            <input\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n              type=\"text\"\n            />\n            <button onClick={sendPost} type=\"submit\">\n              Send\n            </button>\n          </form>\n        </div>\n        <div className=\"feed_inputOptions\">\n          <InputOption Icon={ImageIcon} title=\"Photo\" color=\"#70B5F9\" />\n          <InputOption Icon={SubscriptionsIcon} title=\"video\" color=\"#E7A33E\" />\n          <InputOption Icon={EventNoteIcon} title=\"Event\" color=\"#C0CBCD\" />\n          <InputOption\n            Icon={CalendarViewDayIcon}\n            title=\"Write article\"\n            color=\"#7FC15E\"\n          />\n        </div>\n      </div>\n      \n<FlipMove>\n      {posts.map(({ id, data: { name, description, message, photoUrl } }) => (\n        <Post\n          key={id}\n          name={name}\n          description={description}\n          message={message}\n           photoUrl={photoUrl}\n        />\n      ))}\n</FlipMove>\n      {/* <Post name=\"user\" description=\"This is a test\" message=\"Done here\" />\n      <div></div> */}\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { login } from \"./features/userSlice\";\nimport { auth } from \"./firebase\";\nimport { useDispatch } from \"react-redux\";\nimport \"./Login.css\";\nexport default function Login() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [profilePic, setProfilePic] = useState(\"\");\n  const dispatch = useDispatch();\n  const logintToApp = (e) => {\n    e.preventDefault();\n    auth.signInWithEmailAndPassword(email,password)\n    .then(userAuth=>{\n      dispatch(login({\n      email:userAuth.user.email,\n      uid:userAuth.user.uid,\n      displayName:userAuth.user.displayName,\n      profileurl:userAuth.user.photoURL\n    }))\n    })\n    .catch((error)=>alert(error));\n  };\n  const register = () => {\n    if (!name) {\n      return alert(\"please enter a full name\");\n    }\n    auth\n      .createUserWithEmailAndPassword(email, password)\n      .then((userAuth) => {\n        userAuth.user\n          .updateProfile({\n            displayName: name,\n            photoURl: profilePic,\n          })\n          .then(() => {\n            dispatch(\n              login({\n                email: userAuth.user.email,\n                uid: userAuth.user.uid,\n                displayName: name,\n                photoURl: profilePic,\n              })\n            );\n          });\n      })\n      .catch((error) => alert(error));\n  };\n\n  return (\n    <div className=\"login\">\n      <img\n        src=\"https://www.tsnn.com/sites/default/files/linkedin_0.jpg\"\n        alt=\"linked image\"\n      ></img>\n\n      <form>\n        <input\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          placeholder=\"full name(required if registering)\"\n          type=\"text\"\n        />\n        <input\n          value={profilePic}\n          onChange={(e) => setProfilePic(e.target.value)}\n          placeholder=\"profile pic url {optional}\"\n          type=\"text\"\n        />\n        <input\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          placeholder=\"Email\"\n          type=\"email\"\n        />\n        <input\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          placeholder=\"password\"\n          type=\"password\"\n        />\n\n        <button type=\"submit\" onClick={logintToApp}>\n          Sign In\n        </button>\n      </form>\n      <p>\n        not a member ?{\"\"}\n        <span className=\"login_register\" onClick={register}>\n          Register Now\n        </span>\n      </p>\n    </div>\n  );\n}\n","import React from 'react'\nimport \"./Widgets.css\"\nimport InfoIcon from '@material-ui/icons/Info';\n// import FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecordIcon\";\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\nfunction Widgets() {\n    const newsArticle = (heading, subtitle) => (\n        <div className=\"widgets_article\">\n            <div className=\"widgets_articleLeft\">\n\n           < FiberManualRecordIcon/>\n            </div>\n            <div className=\"widgets_articleRight\">\n                <h4>{heading}</h4>\n                <p>{subtitle}</p>\n            </div>\n        </div>\n        );\n    return (\n        <div className='widgets'>\n            <div className=\"widgets_header\">\n                <h2>Linked News</h2>\n                <InfoIcon />\n            </div>\n            {newsArticle(\"Article one is here\",'Top news -9099 redaers')}\n            {newsArticle(\"Article two is here\",'Top news -7456 redaers')}\n            {newsArticle(\" Article three is here \",'Top news -7456 redaers')}\n            {/* {newsArticle(\"Article one is here\",'linkedin')} */}\n        </div>\n    );\n}\n\nexport default Widgets;\n","import React , {  useEffect }   from \"react\";\nimport { Header } from \"./Header\";\nimport Sidebar from \"./Sidebar\";\nimport { useSelector, useDispatch} from \"react-redux\";\nimport \"./App.css\";\nimport Feed from \"./Feed\";\nimport { selectUser } from \"./features/userSlice\";\nimport { login } from \"./features/userSlice\";\nimport { logout } from \"./features/userSlice\";\nimport Login from \"./Login\";\nimport { auth } from \"./firebase\";\nimport Widgets from \"./Widgets\";\nfunction App() {\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    auth.onAuthStateChanged((userAuth) => {\n      if (userAuth) {\n        dispatch(\n          login({\n            email: userAuth.email,\n            uid: userAuth.uid,\n            displayName: userAuth.displayName,\n            photoUrl: userAuth.photoURL,\n          })\n        );\n        //logged in\n      } else {\n        //logged out\n         dispatch(logout());\n      }\n    });\n  }, []);\n  return (\n    <div className=\"app\">\n      {/* header*/}\n      <Header />\n      {!user ? (\n        <Login />\n      ) : (\n        <div className=\"app_body\">\n          <Sidebar />\n          <Feed />\n          <Widgets/>\n        </div>\n      )}\n      {/* app body*/}\n\n      {/* side bar*/}\n      {/* feed */}\n      {/* widgets */}\n\n\n     \n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport userReducer from '../features/userSlice';\n\nexport const store = configureStore({\n  reducer: {\n    user: userReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}